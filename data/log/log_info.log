24-08-27.06:44:29.620 [main            ] INFO  Application            - Starting Application using Java 1.8.0_321 on LAPTOP-II94MF9I with PID 17524 (D:\Project\JAVA_IDEA\big-market\big-market-app\target\classes started by 11198 in D:\Project\JAVA_IDEA\big-market)
24-08-27.06:44:29.621 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-08-27.06:44:30.304 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-27.06:44:30.306 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-27.06:44:30.328 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
24-08-27.06:44:31.247 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-08-27.06:44:31.254 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-08-27.06:44:31.255 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-08-27.06:44:31.255 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-08-27.06:44:31.370 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-08-27.06:44:31.370 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1720 ms
24-08-27.06:44:31.803 [main            ] INFO  Version                - Redisson 3.23.4
24-08-27.06:44:32.199 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.06:44:32.210 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.06:44:32.767 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-27.06:44:32.780 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-08-27.06:44:32.788 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-08-27.06:44:32.797 [main            ] INFO  Application            - Started Application in 3.543 seconds (JVM running for 3.87)
24-08-27.06:44:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:44:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:44:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:44:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:44:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:00.325 [http-nio-8091-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-08-27.06:45:00.325 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-08-27.06:45:00.327 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-08-27.06:45:00.575 [http-nio-8091-exec-14] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.06:45:00.575 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.06:45:01.215 [http-nio-8091-exec-14] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.06:45:01.216 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.06:45:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:14.099 [http-nio-8091-exec-7] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.06:45:14.100 [http-nio-8091-exec-8] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.06:45:14.106 [http-nio-8091-exec-8] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.06:45:14.107 [http-nio-8091-exec-7] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.06:45:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:25.973 [http-nio-8091-exec-12] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-08-27.06:45:26.043 [http-nio-8091-exec-12] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 108
24-08-27.06:45:26.046 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 108 rule_default
24-08-27.06:45:26.121 [http-nio-8091-exec-12] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-27.06:45:28.459 [http-nio-8091-exec-12] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-27.06:45:28.590 [http-nio-8091-exec-12] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:108
24-08-27.06:45:28.592 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:rule_lock code:0000
24-08-27.06:45:28.594 [http-nio-8091-exec-12] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:108
24-08-27.06:45:28.607 [http-nio-8091-exec-12] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:108
24-08-27.06:45:28.679 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:rule_stock code:0001
24-08-27.06:45:28.679 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 108 null
24-08-27.06:45:28.693 [http-nio-8091-exec-12] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":108,"awardIndex":8},"info":"调用成功"}
24-08-27.06:45:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:108
24-08-27.06:45:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.06:45:43.345 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-27.06:45:43.353 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-27.07:04:24.660 [main            ] INFO  Application            - Starting Application using Java 1.8.0_321 on LAPTOP-II94MF9I with PID 28584 (D:\Project\JAVA_IDEA\big-market\big-market-app\target\classes started by 11198 in D:\Project\JAVA_IDEA\big-market)
24-08-27.07:04:24.662 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-08-27.07:04:25.240 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-27.07:04:25.243 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-27.07:04:25.271 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
24-08-27.07:04:26.273 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-08-27.07:04:26.280 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-08-27.07:04:26.280 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-08-27.07:04:26.280 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-08-27.07:04:26.427 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-08-27.07:04:26.427 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1737 ms
24-08-27.07:04:26.885 [main            ] INFO  Version                - Redisson 3.23.4
24-08-27.07:04:27.340 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.07:04:27.356 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.07:04:27.928 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-27.07:04:27.943 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-08-27.07:04:27.952 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-08-27.07:04:27.961 [main            ] INFO  Application            - Started Application in 3.698 seconds (JVM running for 4.01)
24-08-27.07:04:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:04:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:04:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:04:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:04:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:04:53.361 [http-nio-8091-exec-21] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-08-27.07:04:53.362 [http-nio-8091-exec-21] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-08-27.07:04:53.364 [http-nio-8091-exec-21] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-08-27.07:04:53.600 [http-nio-8091-exec-21] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:04:53.600 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:04:54.047 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.07:04:54.047 [http-nio-8091-exec-21] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.07:04:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:04:55.731 [http-nio-8091-exec-3] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:04:55.817 [http-nio-8091-exec-3] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:04:58.317 [http-nio-8091-exec-25] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:04:58.360 [http-nio-8091-exec-25] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:04:59.129 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:04:59.175 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:04:59.827 [http-nio-8091-exec-4] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:04:59.862 [http-nio-8091-exec-4] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:05:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:01.098 [http-nio-8091-exec-32] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:05:01.099 [http-nio-8091-exec-29] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:05:01.108 [http-nio-8091-exec-32] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.07:05:01.110 [http-nio-8091-exec-29] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.07:05:02.400 [http-nio-8091-exec-8] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:05:02.433 [http-nio-8091-exec-8] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:05:02.956 [http-nio-8091-exec-13] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:05:02.988 [http-nio-8091-exec-13] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:05:03.290 [http-nio-8091-exec-44] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:05:03.320 [http-nio-8091-exec-44] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:05:03.489 [http-nio-8091-exec-48] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:05:03.517 [http-nio-8091-exec-48] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:05:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:16.131 [http-nio-8091-exec-49] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-08-27.07:05:16.152 [http-nio-8091-exec-49] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 101
24-08-27.07:05:16.154 [http-nio-8091-exec-49] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 101 rule_default
24-08-27.07:05:16.190 [http-nio-8091-exec-49] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-27.07:05:18.148 [http-nio-8091-exec-49] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-27.07:05:18.327 [http-nio-8091-exec-49] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:101
24-08-27.07:05:18.342 [http-nio-8091-exec-49] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:101
24-08-27.07:05:18.393 [http-nio-8091-exec-49] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-08-27.07:05:18.394 [http-nio-8091-exec-49] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 null
24-08-27.07:05:18.418 [http-nio-8091-exec-49] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-08-27.07:05:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:25.019 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:101
24-08-27.07:05:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:05:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:06:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:07:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:08:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:25.020 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:09:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:10:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:11:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:12:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:13:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:42.914 [http-nio-8091-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:14:42.914 [http-nio-8091-exec-22] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:14:42.920 [http-nio-8091-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.07:14:42.920 [http-nio-8091-exec-22] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8}],"info":"调用成功"}
24-08-27.07:14:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:14:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:11.333 [http-nio-8091-exec-18] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
24-08-27.07:15:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:15:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:30.210 [http-nio-8091-exec-28] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100005
24-08-27.07:16:30.210 [http-nio-8091-exec-27] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100005
24-08-27.07:16:30.226 [http-nio-8091-exec-28] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100005 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":1},{"awardId":103,"sort":1},{"awardId":104,"sort":1},{"awardId":105,"sort":1}],"info":"调用成功"}
24-08-27.07:16:30.229 [http-nio-8091-exec-27] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100005 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":1},{"awardId":103,"sort":1},{"awardId":104,"sort":1},{"awardId":105,"sort":1}],"info":"调用成功"}
24-08-27.07:16:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:16:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:48.918 [http-nio-8091-exec-31] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:17:48.921 [http-nio-8091-exec-35] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:17:48.936 [http-nio-8091-exec-31] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:17:48.937 [http-nio-8091-exec-35] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:17:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:17:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:18:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:40.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:19:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:07.126 [http-nio-8091-exec-33] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:20:07.130 [http-nio-8091-exec-33] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:20:07.135 [http-nio-8091-exec-37] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:20:07.137 [http-nio-8091-exec-37] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:20:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:13.708 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-27.07:20:13.720 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-27.07:20:16.185 [main            ] INFO  Application            - Starting Application using Java 1.8.0_321 on LAPTOP-II94MF9I with PID 10900 (D:\Project\JAVA_IDEA\big-market\big-market-app\target\classes started by 11198 in D:\Project\JAVA_IDEA\big-market)
24-08-27.07:20:16.187 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-08-27.07:20:16.759 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-27.07:20:16.761 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-27.07:20:16.782 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
24-08-27.07:20:17.756 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-08-27.07:20:17.763 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-08-27.07:20:17.764 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-08-27.07:20:17.764 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-08-27.07:20:17.876 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-08-27.07:20:17.877 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1656 ms
24-08-27.07:20:18.369 [main            ] INFO  Version                - Redisson 3.23.4
24-08-27.07:20:18.794 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.07:20:18.804 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.07:20:19.376 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-27.07:20:19.389 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-08-27.07:20:19.397 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-08-27.07:20:19.408 [main            ] INFO  Application            - Started Application in 3.612 seconds (JVM running for 4.327)
24-08-27.07:20:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:24.388 [http-nio-8091-exec-6] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-08-27.07:20:24.389 [http-nio-8091-exec-6] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-08-27.07:20:24.389 [http-nio-8091-exec-6] INFO  DispatcherServlet      - Completed initialization in 0 ms
24-08-27.07:20:24.457 [http-nio-8091-exec-6] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:20:24.457 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:20:32.853 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:57.556 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:20:57.570 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:20:57.570 [http-nio-8091-exec-6] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:21:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:21:53.143 [http-nio-8091-exec-4] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:21:53.145 [http-nio-8091-exec-3] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:22:04.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:24.302 [http-nio-8091-exec-4] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:24:24.303 [http-nio-8091-exec-3] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:24:24.304 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:24.315 [http-nio-8091-exec-18] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:24:24.315 [http-nio-8091-exec-7] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:24:28.720 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:28.738 [http-nio-8091-exec-7] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-27.07:24:29.148 [http-nio-8091-exec-7] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-27.07:24:29.186 [http-nio-8091-exec-7] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:24:29.186 [http-nio-8091-exec-18] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:24:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:35.187 [http-nio-8091-exec-26] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:24:35.188 [http-nio-8091-exec-28] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:24:35.191 [http-nio-8091-exec-26] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:24:35.191 [http-nio-8091-exec-28] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:24:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:24:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:25:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:25:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:25:07.737 [http-nio-8091-exec-32] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:25:07.737 [http-nio-8091-exec-11] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:25:16.976 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:25:16.985 [http-nio-8091-exec-32] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:27:19.136 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:19.136 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m19s876ms904µs400ns).
24-08-27.07:27:19.147 [http-nio-8091-exec-11] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:27:19.381 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-27.07:27:19.391 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-08-27.07:27:21.294 [main            ] INFO  Application            - Starting Application using Java 1.8.0_321 on LAPTOP-II94MF9I with PID 20816 (D:\Project\JAVA_IDEA\big-market\big-market-app\target\classes started by 11198 in D:\Project\JAVA_IDEA\big-market)
24-08-27.07:27:21.296 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-08-27.07:27:21.841 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-08-27.07:27:21.843 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-08-27.07:27:21.865 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
24-08-27.07:27:22.839 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-08-27.07:27:22.846 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-08-27.07:27:22.846 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-08-27.07:27:22.846 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-08-27.07:27:22.950 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-08-27.07:27:22.950 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1624 ms
24-08-27.07:27:23.486 [main            ] INFO  Version                - Redisson 3.23.4
24-08-27.07:27:23.860 [redisson-netty-2-5] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.07:27:23.872 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-08-27.07:27:24.453 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-08-27.07:27:24.467 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-08-27.07:27:24.476 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-08-27.07:27:24.486 [main            ] INFO  Application            - Started Application in 3.585 seconds (JVM running for 3.956)
24-08-27.07:27:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:31.991 [http-nio-8091-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-08-27.07:27:31.991 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-08-27.07:27:31.991 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
24-08-27.07:27:32.063 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:27:32.063 [http-nio-8091-exec-10] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:27:32.194 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:27:32.194 [http-nio-8091-exec-10] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"sort":1},{"awardId":102,"sort":2},{"awardId":103,"sort":3},{"awardId":104,"sort":4},{"awardId":105,"sort":5},{"awardId":106,"sort":6},{"awardId":107,"sort":7},{"awardId":108,"sort":8},{"awardId":109,"sort":9}],"info":"调用成功"}
24-08-27.07:27:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:40.239 [http-nio-8091-exec-16] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:27:40.241 [http-nio-8091-exec-21] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100001
24-08-27.07:27:46.526 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:46.541 [http-nio-8091-exec-21] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-08-27.07:27:46.994 [http-nio-8091-exec-21] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-08-27.07:27:47.037 [http-nio-8091-exec-21] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"5次使用","sort":2},{"awardId":103,"awardTitle":"10次使用","sort":3},{"awardId":104,"awardTitle":"20次使用","sort":4},{"awardId":105,"awardTitle":"增加gpt-4对话模型","sort":5},{"awardId":106,"awardTitle":"增加dall-e-2画图模型","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"增加dall-e-3画图模型","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"增加100次使用","sort":8},{"awardId":109,"awardSubtitle":"抽奖6次后解锁","awardTitle":"解锁全部模型","sort":9}],"info":"调用成功"}
24-08-27.07:27:47.037 [http-nio-8091-exec-16] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"5次使用","sort":2},{"awardId":103,"awardTitle":"10次使用","sort":3},{"awardId":104,"awardTitle":"20次使用","sort":4},{"awardId":105,"awardTitle":"增加gpt-4对话模型","sort":5},{"awardId":106,"awardTitle":"增加dall-e-2画图模型","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"增加dall-e-3画图模型","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"增加100次使用","sort":8},{"awardId":109,"awardSubtitle":"抽奖6次后解锁","awardTitle":"解锁全部模型","sort":9}],"info":"调用成功"}
24-08-27.07:27:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:51.705 [http-nio-8091-exec-3] INFO  RaffleController       - 随机抽奖开始 strategyId: 100001
24-08-27.07:27:51.723 [http-nio-8091-exec-3] INFO  BlackListLogicChain    - 抽奖责任链-黑名单开始 userId: system strategyId: 100001 ruleModel: rule_blacklist
24-08-27.07:27:51.747 [http-nio-8091-exec-3] INFO  BlackListLogicChain    - 抽奖责任链-黑名单放行 userId: system strategyId: 100001 ruleModel: rule_blacklist
24-08-27.07:27:51.747 [http-nio-8091-exec-3] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: system strategyId: 100001 ruleModel: rule_weight
24-08-27.07:27:51.753 [http-nio-8091-exec-3] INFO  RuleWeightLogicChain   - 抽奖责任链-权重放行 userId: system strategyId: 100001 ruleModel: rule_weight
24-08-27.07:27:51.768 [http-nio-8091-exec-3] ERROR RaffleController       - 随机抽奖失败 strategyId：100001 big_market_strategy_rate_range_key_100001:抽奖策略配置未装配，请通过IStrategyArmory完成装配
24-08-27.07:27:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:27:55.562 [http-nio-8091-exec-9] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100001
24-08-27.07:27:55.723 [http-nio-8091-exec-9] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100001 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:27:58.866 [http-nio-8091-exec-34] INFO  RaffleController       - 随机抽奖开始 strategyId: 100001
24-08-27.07:27:58.869 [http-nio-8091-exec-34] INFO  BlackListLogicChain    - 抽奖责任链-黑名单开始 userId: system strategyId: 100001 ruleModel: rule_blacklist
24-08-27.07:27:58.873 [http-nio-8091-exec-34] INFO  BlackListLogicChain    - 抽奖责任链-黑名单放行 userId: system strategyId: 100001 ruleModel: rule_blacklist
24-08-27.07:27:58.873 [http-nio-8091-exec-34] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId: system strategyId: 100001 ruleModel: rule_weight
24-08-27.07:27:58.877 [http-nio-8091-exec-34] INFO  RuleWeightLogicChain   - 抽奖责任链-权重放行 userId: system strategyId: 100001 ruleModel: rule_weight
24-08-27.07:27:58.894 [http-nio-8091-exec-34] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100001 ruleModel: rule_default awardId: 104
24-08-27.07:27:58.897 [http-nio-8091-exec-34] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100001 104 rule_default
24-08-27.07:27:58.982 [http-nio-8091-exec-34] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100001 awardId:104
24-08-27.07:27:58.992 [http-nio-8091-exec-34] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100001 awardId:104
24-08-27.07:27:59.045 [http-nio-8091-exec-34] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-08-27.07:27:59.046 [http-nio-8091-exec-34] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100001 104 null
24-08-27.07:27:59.061 [http-nio-8091-exec-34] INFO  RaffleController       - 随机抽奖完成 strategyId: 100001 response: {"code":"0000","data":{"awardId":104,"awardIndex":4},"info":"调用成功"}
24-08-27.07:28:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:05.018 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100001 awardId:104
24-08-27.07:28:05.609 [http-nio-8091-exec-36] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:28:05.613 [http-nio-8091-exec-11] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-08-27.07:28:05.629 [http-nio-8091-exec-11] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"7等奖","sort":2},{"awardId":103,"awardTitle":"6等奖","sort":3},{"awardId":104,"awardTitle":"5等奖","sort":4},{"awardId":105,"awardTitle":"4等奖","sort":5},{"awardId":106,"awardSubtitle":"抽奖1次后解锁","awardTitle":"3等奖","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"2等奖","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"1等奖","sort":8}],"info":"调用成功"}
24-08-27.07:28:05.629 [http-nio-8091-exec-36] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"7等奖","sort":2},{"awardId":103,"awardTitle":"6等奖","sort":3},{"awardId":104,"awardTitle":"5等奖","sort":4},{"awardId":105,"awardTitle":"4等奖","sort":5},{"awardId":106,"awardSubtitle":"抽奖1次后解锁","awardTitle":"3等奖","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"2等奖","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"1等奖","sort":8}],"info":"调用成功"}
24-08-27.07:28:09.429 [http-nio-8091-exec-13] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-08-27.07:28:09.445 [http-nio-8091-exec-13] ERROR RaffleController       - 随机抽奖失败 strategyId：100006 big_market_strategy_rate_range_key_100006:抽奖策略配置未装配，请通过IStrategyArmory完成装配
24-08-27.07:28:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:12.026 [http-nio-8091-exec-40] INFO  RaffleController       - 抽奖策略装配开始 strategyId：100006
24-08-27.07:28:12.074 [http-nio-8091-exec-40] INFO  RaffleController       - 抽奖策略装配完成 strategyId：100006 response: {"code":"0000","data":true,"info":"调用成功"}
24-08-27.07:28:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:15.035 [http-nio-8091-exec-14] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-08-27.07:28:15.047 [http-nio-8091-exec-14] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-08-27.07:28:15.048 [http-nio-8091-exec-14] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-08-27.07:28:15.066 [http-nio-8091-exec-14] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-08-27.07:28:15.070 [http-nio-8091-exec-14] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-08-27.07:28:15.074 [http-nio-8091-exec-14] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-08-27.07:28:15.074 [http-nio-8091-exec-14] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 102 null
24-08-27.07:28:15.083 [http-nio-8091-exec-14] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":102,"awardIndex":2},"info":"调用成功"}
24-08-27.07:28:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-08-27.07:28:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:28:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:29:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:20.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:30:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:31:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:32:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:10.029 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:33:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-08-27.07:34:55.231 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-08-27.07:34:55.259 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
